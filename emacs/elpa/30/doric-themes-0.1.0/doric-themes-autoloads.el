;;; doric-themes-autoloads.el --- automatically extracted autoloads (do not edit)   -*- lexical-binding: t -*-
;; Generated by the `loaddefs-generate' function.

;; This file is part of GNU Emacs.

;;; Code:

(add-to-list 'load-path (or (and load-file-name (directory-file-name (file-name-directory load-file-name))) (car load-path)))



;;; Generated autoloads from doric-themes.el

(autoload 'doric-themes-select "doric-themes" "\
Load a Doric THEME using minibuffer completion.
Disable other themes per `doric-themes-disable-other-themes'.

Run `doric-themes-after-load-theme-hook' after loading the theme.

(fn THEME)" t)
(autoload 'doric-themes-toggle "doric-themes" "\
Toggle between the two `doric-themes-to-toggle'.
If `doric-themes-to-toggle' does not specify two Doric themes, inform
the user about it while prompting with completion for a theme among our
collection (this is practically the same as the `doric-themes-select'
command).

Run `doric-themes-after-load-theme-hook' after loading the theme." t)
(autoload 'doric-themes-rotate "doric-themes" "\
Rotate to the next theme among THEMES.
When called interactively THEMES is the value of `doric-themes-to-rotate'.

If the current theme is already the next in line, then move to the one
after.  Perform the rotation rightwards, such that the first element in
the list becomes the last.  Do not modify THEMES in the process.

Run `doric-themes-after-load-theme-hook' after loading a theme.

(fn THEMES)" t)
(autoload 'doric-themes-load-random "doric-themes" "\
Load a Doric theme at random, excluding the current one.

With optional VARIANT as a prefix argument, prompt to limit the set of
themes to either dark or light variants.  When called from Lisp, VARIANT
is either the `dark' or `light' symbol.

Run `doric-themes-after-load-theme-hook' after loading a theme.

(fn &optional VARIANT)" t)
(autoload 'doric-themes-define-theme "doric-themes" "\
Define theme with NAME and `light' or `dark' BACKGROUND-MODE.

(fn NAME BACKGROUND-MODE)" nil t)
(function-put 'doric-themes-define-theme 'lisp-indent-function 0)
(when load-file-name (let ((dir (file-name-directory load-file-name))) (unless (file-equal-p dir (expand-file-name "themes/" data-directory)) (add-to-list 'custom-theme-load-path dir))))
(register-definition-prefixes "doric-themes" '("doric-themes-"))

;;; End of scraped data

(provide 'doric-themes-autoloads)

;; Local Variables:
;; version-control: never
;; no-byte-compile: t
;; no-update-autoloads: t
;; no-native-compile: t
;; coding: utf-8-emacs-unix
;; End:

;;; doric-themes-autoloads.el ends here
