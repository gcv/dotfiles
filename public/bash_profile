# -*- mode: shell-script; -*-
#
# .bash_profile is executed for interactive login shells. 

# shared non-Bash sh-type shell configuration:
[[ -f ~/.profile ]] && . ~/.profile

# basic prompt:
PS1="[\u@\h:\W]\$ "

# history configuration
shopt -s histappend
HISTFILE="${HOME}/.dotfiles/private/history-files/bash_history_$(hostname -s)"
HISTSIZE=500000
HISTFILESIZE=500000
HISTCONTROL=ignorespace:ignoredups:erasedups
# attempt to fix broken multiline history handling (still broken in bash version < 5, see https://askubuntu.com/a/1210371)
shopt -s cmdhist
shopt -s lithist
# force timestamps into the history file _and_ force multiline history separation in bash version >= 5
HISTTIMEFORMAT="%F %T "
# force history flush on every command (zsh-style), see https://unix.stackexchange.com/a/18443/459230
# note the various versions of this are quite buggy!
#PROMPT_COMMAND="history -a; history -r; $PROMPT_COMMAND"
#PROMPT_COMMAND="history -n; history -w; history -c; history -r; $PROMPT_COMMAND"

# better globbing:
shopt -s globstar

# fzf integrations:
if command_exists fzf && command_exists fzf-history-all; then
    # custom multi-shell history search:
    fzf-history-all-widget () {
        local selected=$(fzf-history-all bash)
        READLINE_LINE="${READLINE_LINE:0:$READLINE_POINT}$selected${READLINE_LINE:$READLINE_POINT}"
        READLINE_POINT=$(( READLINE_POINT + ${#selected} ))
    }
    bind -x '"\er":fzf-history-all-widget'

    # file and directory completion:
    fzf-file-widget() {
        local curr_word="${READLINE_LINE:0:READLINE_POINT}"
        local last_word="${curr_word##* }"
        local start_pos
        if [ "$curr_word" = "$last_word" ]; then
            start_pos=0
            local prompt_prefix=""
        else
            start_pos=$((READLINE_POINT - ${#last_word}))
            local prompt_prefix="${READLINE_LINE:0:$start_pos}"
        fi
        # handle directory completion when input ends with /
        if [[ "$last_word" =~ /$ ]] && [ -d "${last_word%/}" ]; then
            search_dir="${last_word%/}"
            search_term=""
        else
            # split last_word into directory and search term
            if [[ "$last_word" =~ / ]]; then
                search_dir="$(dirname "$last_word")"
                search_term="$(basename "$last_word")"
            else
                search_dir="."
                search_term="$last_word"
            fi
        fi
        local selected=$(find "$search_dir" -maxdepth 1 \( -type f -o -type d \) ! -name "." \
                | sed "s|^${search_dir}/||" \
                | fzf --height ${FZF_TMUX_HEIGHT:-20%} --layout=reverse --inline-info --tiebreak=index +m \
                    --prompt "${prompt_prefix}" --query="$search_term" --select-1)
        if [ -n "$selected" ]; then
            if [[ $selected =~ [[:space:]\'\"\\] ]]; then
                selected="\"$selected\""
            fi
            # If we were in a subdirectory, prepend it back
            if [ "$search_dir" != "." ]; then
                selected="${search_dir}/${selected}"
            fi
            READLINE_LINE="${READLINE_LINE:0:$start_pos}$selected${READLINE_LINE:READLINE_POINT}"
            READLINE_POINT=$((start_pos + ${#selected}))
        fi
    }
    bind -x '"\C-f": fzf-file-widget'
fi


# direnv
if command_exists direnv; then
    eval "$(direnv hook bash)"
fi

# zoxide (modern autojump replacement)
if command_exists zoxide; then
    export _ZO_DATA_DIR="${HOME}/.local/share/zoxide"
    eval "$(zoxide init bash)"
fi

# look for and maybe enable programmable completion features (Debian):
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi

# prompt
if command_exists starship; then
    eval "$(starship init bash)"
fi

# bash version >4 only:
if ((BASH_VERSINFO[0] > 3)); then
    shopt -s autocd
fi

# bash version <5 warning:
if ((BASH_VERSINFO[0] < 5)); then
    echo "warning: bash version < 5 detected; multiline history will not work between sessions" 1>&2
fi
