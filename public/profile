# -*- mode: shell-script; -*-
#
# .profile should work with all non-Bash POSIX sh compatible shells (ash, dash,
# and ideally ksh and sh). This version probably does not yet.
#
# Known POSIX incompatibilities:
# - use of local


### path setup

path_add () {
    local _grep
    if [ -e /bin/grep ]; then
        _grep=/bin/grep
    elif [ -e /usr/bin/grep ]; then
        _grep=/usr/bin/grep
    fi
    if ! echo "$PATH" | "${_grep}" -Eq "(^|:)$1($|:)" ; then
        if [ "$2" = "after" ] ; then
            PATH="$PATH:$1"
        else
            PATH="$1:$PATH"
        fi
    fi
}

path_add "${HOME}/.local/bin" after


### deal with ssh-agent

if [ -z "${SSH_AUTH_SOCK}" ]; then
    if [ "${UNAME}" = "Darwin" ]; then
        # launchd manages ssh-agent on Mac, but individual shells can sometimes lose SSH_AUTH_SOCK
        ssh_agent_pid=$(ps uwx | grep "${USER}" | grep ssh-agent | grep -v grep | awk '{print $2}')
        if [ -z ${ssh_agent_pid} ]; then
            # try to restart ssh-agent
            launchctl start gui/$(id -u)/com.openssh.ssh-agent
            ssh_agent_pid=$(ps uwx | grep "${USER}" | grep ssh-agent | grep -v grep | awk '{print $2}')
        fi
        export SSH_AUTH_SOCK=$(lsof -p ${ssh_agent_pid} | grep com.apple.launchd | grep Listeners | awk '{print $8}' | head -1)
    else
        if [[ $(command -v ssh-agent) ]]; then
            ssh_agent_sock_file="${HOME}/.ssh/ssh-agent-$(hostname -s)-$(id -un).sock"
            if [ ! -S "${ssh_agent_sock_file}" ]; then
                ssh-agent -s -a "${ssh_agent_sock_file}" > /dev/null
            fi
            export SSH_AUTH_SOCK="${ssh_agent_sock_file}"
        fi
    fi
fi


### aliases

alias ..="cd .."
alias ...="cd ../.."
alias ....="cd ../../.."
alias .....="cd ../../../.."

alias ls="ls --color=auto"
alias v="ls -lahF"
alias rm="rm -i"
alias cp='cp -p'
