# -*- mode: shell-script; -*-
#
# .profile should work with all non-Bash POSIX sh compatible shells (ash, dash,
# and ideally ksh and sh). This version probably does not yet.
#
# Known POSIX incompatibilities:
# - use of [[ ]] instead of [ ]
# - use of local


### command finding helper:

command_exists () { command -v "$1" >/dev/null 2>&1; }


### path setup

path_add () {
    local _grep
    if [ -e /bin/grep ]; then
        _grep=/bin/grep
    elif [ -e /usr/bin/grep ]; then
        _grep=/usr/bin/grep
    fi
    if ! echo "$PATH" | "${_grep}" -Eq "(^|:)$1($|:)" ; then
        if [ "$2" = "after" ] ; then
            PATH="$PATH:$1"
        else
            PATH="$1:$PATH"
        fi
    fi
}

path_add "${HOME}/.nix-profile/sbin" before
path_add "${HOME}/.nix-profile/bin" before
path_add "${HOME}/.local/sbin" before
path_add "${HOME}/.local/bin" before


### enable Nix and Devbox (must happen early for correct path setup):

[[ -e ~/.nix-profile/etc/profile.d/nix.sh ]] && . ~/.nix-profile/etc/profile.d/nix.sh
command_exists devbox && eval "$(devbox global shellenv --init-hook)"


### environment variables

export DO_NOT_TRACK=1 # https://consoledonottrack.com
export EDITOR=vi
export LESS="-M -R"
export LESSHISTFILE=/dev/null
if command_exists bat; then
    export PAGER=bat
    export MANPAGER="bat -p"
elif command_exists less; then
    export PAGER=less
fi
export LANG=en_US.UTF-8
export LC_ALL=en_US.UTF-8

# load private environment variables:
[[ -f ~/.dotfiles/private/shell-profile-private ]] && . ~/.dotfiles/private/shell-profile-private


### 24-bit terminal color handling

case $TERM in
    linux | screen*)
        unset COLORTERM
        ;;
    *)
        export COLORTERM=truecolor
        ;;
esac


### deal with ssh-agent

if [ -z "${SSH_AUTH_SOCK}" -o ! -e "${SSH_AUTH_SOCK}" ]; then
    if [ "${UNAME}" = "Darwin" ]; then
        # launchd manages ssh-agent on Mac, but individual shells can sometimes lose SSH_AUTH_SOCK
        ssh_agent_pid=$(ps uwx | grep "${USER}" | grep ssh-agent | grep -v grep | awk '{print $2}')
        if [ -z ${ssh_agent_pid} ]; then
            # try to restart ssh-agent
            launchctl start gui/$(id -u)/com.openssh.ssh-agent
            ssh_agent_pid=$(ps uwx | grep "${USER}" | grep ssh-agent | grep -v grep | awk '{print $2}')
        fi
        # launchd may fail to restart the ssh-agent, sigh
        if [ ! -z ${ssh_agent_pid} ]; then
            export SSH_AUTH_SOCK=$(lsof -p ${ssh_agent_pid} | grep com.apple.launchd | grep Listeners | awk '{print $8}' | head -1)
        fi
    else
        if command_exists ssh-agent; then
            ssh_agent_sock_file="${HOME}/.ssh/ssh-agent-$(hostname -s)-$(id -un).sock"
            if [ ! -S "${ssh_agent_sock_file}" ]; then
                ssh-agent -s -a "${ssh_agent_sock_file}" > /dev/null
            fi
            export SSH_AUTH_SOCK="${ssh_agent_sock_file}"
        fi
    fi
fi


### aliases

alias ..="cd .."
alias ...="cd ../.."
alias ....="cd ../../.."
alias .....="cd ../../../.."
alias .....="cd ../../../../.."
alias ......="cd ../../../../../.."

if [[ $(ls --color 2>/dev/null) ]]; then
    # GNU ls probably available
    alias ls='ls --color --sort=version'
elif command_exists gls && [[ $(gls --color 2>/dev/null) ]]; then
    alias ls='gls --color --sort=version'
fi
alias v="ls -lahF"
alias grep="grep --color"
alias rm="rm -i"
alias cp="cp -p"
if command_exists eza; then
    alias e="eza -l"
fi

if command_exists emacsclient; then
    alias ec="emacsclient -n"
    alias et='emacsclient -a "" -t'
fi

if command_exists mc; then # use Midnight Commander directory-following wrapper
    if [ -f "${HOME}/.nix-profile/libexec/mc/mc-wrapper.sh" ]; then
        alias mc=". ${HOME}/.nix-profile/libexec/mc/mc-wrapper.sh"
    fi
fi
